//#########################################################################
//generated by MysqlMetal on 2007-Dec-21 - extracted from server localhost.
//#########################################################################

using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Reflection;
using DBLinq.Linq;
using DBLinq.Linq.Mapping;

namespace nwind
{
    
	/// <summary>
	/// This class represents Oracle database Northwind.
	/// </summary>
	public partial class Northwind : MContext
	{
		public Northwind(string connStr) : base(connStr)
		{
		}
		public Northwind(System.Data.IDbConnection connection) : base(connection)
		{
		}
	
		//these fields represent tables in database and are
		//ordered - parent tables first, child tables next. Do not change the order.
		public MTable<Product> Products { get { return base.GetTable<Product>("Products"); } }
		public MTable<Customer> Customers { get { return base.GetTable<Customer>("Customers"); } }
		public MTable<Order> Orders { get { return base.GetTable<Order>("Orders"); } }
		public MTable<Employee> Employees { get { return base.GetTable<Employee>("Employees"); } }
	
		
	}
	
	
	
	[Table(Name = "PRODUCTS")]
	public partial class Product : IModified
	{
		
		protected int _CATEGORYID;
		protected int? _UNITSINSTOCK;
		protected int? _UNITSONORDER;
		protected string _PRODUCTNAME;
		protected string _QUANTITYPERUNIT;
		protected bool _DISCONTINUED;
		protected int _PRODUCTID;
		protected int? _UNITPRICE;
		protected int _SUPPLIERID;
		protected int? _REORDERLEVEL;
	
		
		#region costructors
		public Product()
		{
		}
		public Product(int CategoryID,int? UNITSINSTOCK,int? UNITSONORDER,string ProductName,string QuantityPerUnit,bool Discontinued,int ProductID,int? UnitPrice,int SupplierID,int? REORDERLEVEL)
		{
		    this._CATEGORYID = CategoryID;
		this._UNITSINSTOCK = UNITSINSTOCK;
		this._UNITSONORDER = UNITSONORDER;
		this._PRODUCTNAME = ProductName;
		this._QUANTITYPERUNIT = QuantityPerUnit;
		this._DISCONTINUED = Discontinued;
		this._PRODUCTID = ProductID;
		this._UNITPRICE = UnitPrice;
		this._SUPPLIERID = SupplierID;
		this._REORDERLEVEL = REORDERLEVEL;
		}
		#endregion
		
	
		#region properties - accessors
	
		[Column(Name = "CATEGORYID", DbType = "NUMBER", CanBeNull = false)]
		[DebuggerNonUserCode]
		public int CategoryID
		{
		    get { return _CATEGORYID; }
		    set { _CATEGORYID = value; IsModified = true; }
		}
		
	
		[Column(Name = "UNITSINSTOCK", DbType = "NUMBER", CanBeNull = true)]
		[DebuggerNonUserCode]
		public int? UNITSINSTOCK
		{
		    get { return _UNITSINSTOCK; }
		    set { _UNITSINSTOCK = value; IsModified = true; }
		}
		
	
		[Column(Name = "UNITSONORDER", DbType = "NUMBER", CanBeNull = true)]
		[DebuggerNonUserCode]
		public int? UNITSONORDER
		{
		    get { return _UNITSONORDER; }
		    set { _UNITSONORDER = value; IsModified = true; }
		}
		
	
		[Column(Name = "PRODUCTNAME", DbType = "VARCHAR2", CanBeNull = false)]
		[DebuggerNonUserCode]
		public string ProductName
		{
		    get { return _PRODUCTNAME; }
		    set { _PRODUCTNAME = value; IsModified = true; }
		}
		
	
		[Column(Name = "QUANTITYPERUNIT", DbType = "VARCHAR2", CanBeNull = true)]
		[DebuggerNonUserCode]
		public string QuantityPerUnit
		{
		    get { return _QUANTITYPERUNIT; }
		    set { _QUANTITYPERUNIT = value; IsModified = true; }
		}
		
	
		[Column(Name = "DISCONTINUED", DbType = "NUMBER", CanBeNull = false)]
		[DebuggerNonUserCode]
		public bool Discontinued
		{
		    get { return _DISCONTINUED; }
		    set { _DISCONTINUED = value; IsModified = true; }
		}
		
	
		[Column(Name = "PRODUCTID", DbType = "NUMBER", IsPrimaryKey = true)]
		[DebuggerNonUserCode]
		public int ProductID
		{
		    get { return _PRODUCTID; }
		    set { _PRODUCTID = value; IsModified = true; }
		}
		
	
		[Column(Name = "UNITPRICE", DbType = "NUMBER", CanBeNull = true)]
		[DebuggerNonUserCode]
		public int? UnitPrice
		{
		    get { return _UNITPRICE; }
		    set { _UNITPRICE = value; IsModified = true; }
		}
		
	
		[Column(Name = "SUPPLIERID", DbType = "NUMBER", CanBeNull = false)]
		[DebuggerNonUserCode]
		public int SupplierID
		{
		    get { return _SUPPLIERID; }
		    set { _SUPPLIERID = value; IsModified = true; }
		}
		
	
		[Column(Name = "REORDERLEVEL", DbType = "NUMBER", CanBeNull = true)]
		[DebuggerNonUserCode]
		public int? REORDERLEVEL
		{
		    get { return _REORDERLEVEL; }
		    set { _REORDERLEVEL = value; IsModified = true; }
		}
		
	#endregion
		
		#region GetHashCode(),Equals() - uses column $fieldID to look up objects in liveObjectMap
		//TODO: move this logic our of user code, into a generated class
		public override int GetHashCode()
		{
			return _PRODUCTID.GetHashCode();
		}
		public override bool Equals(object obj)
		{
			Product o2 = obj as Product;
			if(o2==null)
				return false;
			return _PRODUCTID == o2._PRODUCTID;
		}
		#endregion
	
		
		[Association(Storage = "null", OtherKey = "PRODUCTID", Name = "FK_ORDER_PRODUCT")]
		public EntityMSet<Order> Orders
		{
		    get { return null; } //L212 - child data available only when part of query
		}
		
	
		public bool IsModified { get; set; }
	}
	
	
	
	[Table(Name = "CUSTOMER")]
	public partial class Customer : IModified
	{
		
		protected string _PHONE;
		protected string _COUNTRY;
		protected string _CITY;
		protected string _COMPANYNAME;
		protected string _POSTALCODE;
		protected string _CONTACTNAME;
		protected int _CUSTOMERID;
	
		
		#region costructors
		public Customer()
		{
		}
		public Customer(string Phone,string COUNTRY,string City,string CompanyName,string PostalCode,string ContactName,int CustomerID)
		{
		    this._PHONE = Phone;
		this._COUNTRY = COUNTRY;
		this._CITY = City;
		this._COMPANYNAME = CompanyName;
		this._POSTALCODE = PostalCode;
		this._CONTACTNAME = ContactName;
		this._CUSTOMERID = CustomerID;
		}
		#endregion
		
	
		#region properties - accessors
	
		[Column(Name = "PHONE", DbType = "VARCHAR2", CanBeNull = true)]
		[DebuggerNonUserCode]
		public string Phone
		{
		    get { return _PHONE; }
		    set { _PHONE = value; IsModified = true; }
		}
		
	
		[Column(Name = "COUNTRY", DbType = "VARCHAR2", CanBeNull = false)]
		[DebuggerNonUserCode]
		public string COUNTRY
		{
		    get { return _COUNTRY; }
		    set { _COUNTRY = value; IsModified = true; }
		}
		
	
		[Column(Name = "CITY", DbType = "VARCHAR2", CanBeNull = false)]
		[DebuggerNonUserCode]
		public string City
		{
		    get { return _CITY; }
		    set { _CITY = value; IsModified = true; }
		}
		
	
		[Column(Name = "COMPANYNAME", DbType = "VARCHAR2", CanBeNull = false)]
		[DebuggerNonUserCode]
		public string CompanyName
		{
		    get { return _COMPANYNAME; }
		    set { _COMPANYNAME = value; IsModified = true; }
		}
		
	
		[Column(Name = "POSTALCODE", DbType = "VARCHAR2", CanBeNull = false)]
		[DebuggerNonUserCode]
		public string PostalCode
		{
		    get { return _POSTALCODE; }
		    set { _POSTALCODE = value; IsModified = true; }
		}
		
	
		[Column(Name = "CONTACTNAME", DbType = "VARCHAR2", CanBeNull = false)]
		[DebuggerNonUserCode]
		public string ContactName
		{
		    get { return _CONTACTNAME; }
		    set { _CONTACTNAME = value; IsModified = true; }
		}
		
	
		[Column(Name = "CUSTOMERID", DbType = "NUMBER", IsPrimaryKey = true)]
		[DebuggerNonUserCode]
		public int CustomerID
		{
		    get { return _CUSTOMERID; }
		    set { _CUSTOMERID = value; IsModified = true; }
		}
		
	#endregion
		
		#region GetHashCode(),Equals() - uses column $fieldID to look up objects in liveObjectMap
		//TODO: move this logic our of user code, into a generated class
		public override int GetHashCode()
		{
			return _CUSTOMERID.GetHashCode();
		}
		public override bool Equals(object obj)
		{
			Customer o2 = obj as Customer;
			if(o2==null)
				return false;
			return _CUSTOMERID == o2._CUSTOMERID;
		}
		#endregion
	
		
		[Association(Storage = "null", OtherKey = "CUSTOMERID", Name = "FK_ORDER_CUSTOMER")]
		public EntityMSet<Order> Orders
		{
		    get { return null; } //L212 - child data available only when part of query
		}
		
	
		public bool IsModified { get; set; }
	}
	
	
	
	[Table(Name = "ORDERS")]
	public partial class Order : IModified
	{
		
		protected int _CUSTOMERID;
		protected DateTime _ORDERDATE;
		protected int _ORDERID;
		protected int _PRODUCTID;
	
		
		#region costructors
		public Order()
		{
		}
		public Order(int CustomerID,DateTime OrderDate,int OrderID,int ProductID)
		{
		    this._CUSTOMERID = CustomerID;
		this._ORDERDATE = OrderDate;
		this._ORDERID = OrderID;
		this._PRODUCTID = ProductID;
		}
		#endregion
		
	
		#region properties - accessors
	
		[Column(Name = "CUSTOMERID", DbType = "NUMBER", CanBeNull = false)]
		[DebuggerNonUserCode]
		public int CustomerID
		{
		    get { return _CUSTOMERID; }
		    set { _CUSTOMERID = value; IsModified = true; }
		}
		
	
		[Column(Name = "ORDERDATE", DbType = "TIMESTAMP", CanBeNull = false)]
		[DebuggerNonUserCode]
		public DateTime OrderDate
		{
		    get { return _ORDERDATE; }
		    set { _ORDERDATE = value; IsModified = true; }
		}
		
	
		[Column(Name = "ORDERID", DbType = "NUMBER", IsPrimaryKey = true)]
		[DebuggerNonUserCode]
		public int OrderID
		{
		    get { return _ORDERID; }
		    set { _ORDERID = value; IsModified = true; }
		}
		
	
		[Column(Name = "PRODUCTID", DbType = "NUMBER", CanBeNull = false)]
		[DebuggerNonUserCode]
		public int ProductID
		{
		    get { return _PRODUCTID; }
		    set { _PRODUCTID = value; IsModified = true; }
		}
		
	#endregion
		
		#region GetHashCode(),Equals() - uses column $fieldID to look up objects in liveObjectMap
		//TODO: move this logic our of user code, into a generated class
		public override int GetHashCode()
		{
			return _ORDERID.GetHashCode();
		}
		public override bool Equals(object obj)
		{
			Order o2 = obj as Order;
			if(o2==null)
				return false;
			return _ORDERID == o2._ORDERID;
		}
		#endregion
	
		
		
		private EntityRef<Customer> _Customer;    
		
		[Association(Storage="_Customer", ThisKey="CUSTOMERID", Name="FK_ORDER_CUSTOMER")]
		[DebuggerNonUserCode]
		public Customer Customer {
			get { return this._Customer.Entity; }
			set { this._Customer.Entity = value; }
		}
		
		private EntityRef<Product> _Product;    
		
		[Association(Storage="_Product", ThisKey="PRODUCTID", Name="FK_ORDER_PRODUCT")]
		[DebuggerNonUserCode]
		public Product Product {
			get { return this._Product.Entity; }
			set { this._Product.Entity = value; }
		}
	
		public bool IsModified { get; set; }
	}
	
	
	
	[Table(Name = "EMPLOYEES")]
	public partial class Employee : IModified
	{
		
		protected string _POSTALCODE;
		protected string _TITLE;
		protected DateTime? _HIREDATE;
		protected int? _REPORTSTO;
		protected string _REGION;
		protected int _EMPLOYEEID;
		protected DateTime? _BIRTHDATE;
		protected string _HOMEPHONE;
		protected string _NOTES;
		protected string _LASTNAME;
		protected string _FIRSTNAME;
		protected string _COUNTRY;
		protected byte[] _PHOTO;
		protected string _ADDRESS;
		protected string _CITY;
	
		
		#region costructors
		public Employee()
		{
		}
		public Employee(string PostalCode,string TITLE,DateTime? HIREDATE,int? ReportsTo,string REGION,int EMPLOYEEID,DateTime? BIRTHDATE,string HOMEPHONE,string NOTES,string LastName,string FirstName,string COUNTRY,byte[] PHOTO,string ADDRESS,string City)
		{
		    this._POSTALCODE = PostalCode;
		this._TITLE = TITLE;
		this._HIREDATE = HIREDATE;
		this._REPORTSTO = ReportsTo;
		this._REGION = REGION;
		this._EMPLOYEEID = EMPLOYEEID;
		this._BIRTHDATE = BIRTHDATE;
		this._HOMEPHONE = HOMEPHONE;
		this._NOTES = NOTES;
		this._LASTNAME = LastName;
		this._FIRSTNAME = FirstName;
		this._COUNTRY = COUNTRY;
		this._PHOTO = PHOTO;
		this._ADDRESS = ADDRESS;
		this._CITY = City;
		}
		#endregion
		
	
		#region properties - accessors
	
		[Column(Name = "POSTALCODE", DbType = "VARCHAR2", CanBeNull = true)]
		[DebuggerNonUserCode]
		public string PostalCode
		{
		    get { return _POSTALCODE; }
		    set { _POSTALCODE = value; IsModified = true; }
		}
		
	
		[Column(Name = "TITLE", DbType = "VARCHAR2", CanBeNull = true)]
		[DebuggerNonUserCode]
		public string TITLE
		{
		    get { return _TITLE; }
		    set { _TITLE = value; IsModified = true; }
		}
		
	
		[Column(Name = "HIREDATE", DbType = "DATE", CanBeNull = true)]
		[DebuggerNonUserCode]
		public DateTime? HIREDATE
		{
		    get { return _HIREDATE; }
		    set { _HIREDATE = value; IsModified = true; }
		}
		
	
		[Column(Name = "REPORTSTO", DbType = "NUMBER", CanBeNull = true)]
		[DebuggerNonUserCode]
		public int? ReportsTo
		{
		    get { return _REPORTSTO; }
		    set { _REPORTSTO = value; IsModified = true; }
		}
		
	
		[Column(Name = "REGION", DbType = "VARCHAR2", CanBeNull = true)]
		[DebuggerNonUserCode]
		public string REGION
		{
		    get { return _REGION; }
		    set { _REGION = value; IsModified = true; }
		}
		
	
		[Column(Name = "EMPLOYEEID", DbType = "NUMBER", IsPrimaryKey = true)]
		[DebuggerNonUserCode]
		public int EMPLOYEEID
		{
		    get { return _EMPLOYEEID; }
		    set { _EMPLOYEEID = value; IsModified = true; }
		}
		
	
		[Column(Name = "BIRTHDATE", DbType = "DATE", CanBeNull = true)]
		[DebuggerNonUserCode]
		public DateTime? BIRTHDATE
		{
		    get { return _BIRTHDATE; }
		    set { _BIRTHDATE = value; IsModified = true; }
		}
		
	
		[Column(Name = "HOMEPHONE", DbType = "VARCHAR2", CanBeNull = true)]
		[DebuggerNonUserCode]
		public string HOMEPHONE
		{
		    get { return _HOMEPHONE; }
		    set { _HOMEPHONE = value; IsModified = true; }
		}
		
	
		[Column(Name = "NOTES", DbType = "VARCHAR2", CanBeNull = true)]
		[DebuggerNonUserCode]
		public string NOTES
		{
		    get { return _NOTES; }
		    set { _NOTES = value; IsModified = true; }
		}
		
	
		[Column(Name = "LASTNAME", DbType = "VARCHAR2", CanBeNull = false)]
		[DebuggerNonUserCode]
		public string LastName
		{
		    get { return _LASTNAME; }
		    set { _LASTNAME = value; IsModified = true; }
		}
		
	
		[Column(Name = "FIRSTNAME", DbType = "VARCHAR2", CanBeNull = false)]
		[DebuggerNonUserCode]
		public string FirstName
		{
		    get { return _FIRSTNAME; }
		    set { _FIRSTNAME = value; IsModified = true; }
		}
		
	
		[Column(Name = "COUNTRY", DbType = "VARCHAR2", CanBeNull = true)]
		[DebuggerNonUserCode]
		public string COUNTRY
		{
		    get { return _COUNTRY; }
		    set { _COUNTRY = value; IsModified = true; }
		}
		
	
		[Column(Name = "PHOTO", DbType = "BLOB", CanBeNull = true)]
		[DebuggerNonUserCode]
		public byte[] PHOTO
		{
		    get { return _PHOTO; }
		    set { _PHOTO = value; IsModified = true; }
		}
		
	
		[Column(Name = "ADDRESS", DbType = "VARCHAR2", CanBeNull = true)]
		[DebuggerNonUserCode]
		public string ADDRESS
		{
		    get { return _ADDRESS; }
		    set { _ADDRESS = value; IsModified = true; }
		}
		
	
		[Column(Name = "CITY", DbType = "VARCHAR2", CanBeNull = true)]
		[DebuggerNonUserCode]
		public string City
		{
		    get { return _CITY; }
		    set { _CITY = value; IsModified = true; }
		}
		
	#endregion
		
		#region GetHashCode(),Equals() - uses column $fieldID to look up objects in liveObjectMap
		//TODO: move this logic our of user code, into a generated class
		public override int GetHashCode()
		{
			return _EMPLOYEEID.GetHashCode();
		}
		public override bool Equals(object obj)
		{
			Employee o2 = obj as Employee;
			if(o2==null)
				return false;
			return _EMPLOYEEID == o2._EMPLOYEEID;
		}
		#endregion
	
		
		[Association(Storage = "null", OtherKey = "EMPLOYEEID", Name = "SYS_C004254")]
		public EntityMSet<Employee> Employees
		{
		    get { return null; } //L212 - child data available only when part of query
		}
		
		private EntityRef<Employee> _Employee;    
		
		[Association(Storage="_Employee", ThisKey="REPORTSTO", Name="SYS_C004254")]
		[DebuggerNonUserCode]
		public Employee REPORTSTOEmployee {
			get { return this._Employee.Entity; }
			set { this._Employee.Entity = value; }
		}
	
		public bool IsModified { get; set; }
	}
	
}
