//#########################################################################
//generated by MysqlMetal on 2007-Feb-19 - extracted from server localhost.
//#########################################################################

using System;
using System.Diagnostics;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using System.Data.Linq;
using DBLinq.Linq;

namespace ClientCodeOra
{
    
	/// <summary>
	/// This class represents MySql database LinqTestDB.
	/// </summary>
	public partial class LinqTestDB : MContext
	{
	    public LinqTestDB(string connStr):base(connStr)
	    {
	        Customers = new MTable<Customer>(this);
			Products = new MTable<Product>(this);
			Orders = new MTable<Order>(this);
	    }
	
	    //these fields represent tables in database and are
	    //ordered - parent tables first, child tables next. Do not change the order.
	    public readonly MTable<Customer> Customers;
		public readonly MTable<Product> Products;
		public readonly MTable<Order> Orders;
	}
	
	
	
	[Table(Name="CUSTOMER")]
	public partial class Customer : IModified
	{
	    bool _isModified_;
	    public bool IsModified 
	    { 
	        get { return _isModified_; } 
	        set { _isModified_ = value; } 
	    }
	
	    
		protected string _PHONE;
	
		protected string _COUNTRY;
	
		protected string _POSTALCODE;
	
		protected string _CITY;
	
		protected string _CONTACTNAME;
	
		protected string _COMPANYNAME;
	
		protected int _CUSTOMERID;
	
	    
		#region costructors
		public Customer()
		{
		}
		public Customer(string PHONE,string COUNTRY,string POSTALCODE,string CITY,string CONTACTNAME,string COMPANYNAME,int CUSTOMERID)
		{
		    this._PHONE = PHONE;
		this._COUNTRY = COUNTRY;
		this._POSTALCODE = POSTALCODE;
		this._CITY = CITY;
		this._CONTACTNAME = CONTACTNAME;
		this._COMPANYNAME = COMPANYNAME;
		this._CUSTOMERID = CUSTOMERID;
		}
		#endregion
		
	
	    #region properties - accessors
	
		[Column(Name="PHONE", DBType="VARCHAR2")]
		[DebuggerNonUserCode]
		public string Phone
		{
		    get { return _PHONE; }
		    set { _PHONE=value; _isModified_=true; }
		}
		
	
		[Column(Name="COUNTRY", DBType="VARCHAR2")]
		[DebuggerNonUserCode]
		public string Country
		{
		    get { return _COUNTRY; }
		    set { _COUNTRY=value; _isModified_=true; }
		}
		
	
		[Column(Name="POSTALCODE", DBType="VARCHAR2")]
		[DebuggerNonUserCode]
		public string PostalCode
		{
		    get { return _POSTALCODE; }
		    set { _POSTALCODE=value; _isModified_=true; }
		}
		
	
		[Column(Name="CITY", DBType="VARCHAR2")]
		[DebuggerNonUserCode]
		public string City
		{
		    get { return _CITY; }
		    set { _CITY=value; _isModified_=true; }
		}
		
	
		[Column(Name="CONTACTNAME", DBType="VARCHAR2")]
		[DebuggerNonUserCode]
		public string ContactName
		{
		    get { return _CONTACTNAME; }
		    set { _CONTACTNAME=value; _isModified_=true; }
		}
		
	
		[Column(Name="COMPANYNAME", DBType="VARCHAR2")]
		[DebuggerNonUserCode]
		public string CompanyName
		{
		    get { return _COMPANYNAME; }
		    set { _COMPANYNAME=value; _isModified_=true; }
		}
		
	
		[Column(Name="CUSTOMERID", DBType="NUMBER")]
		[DebuggerNonUserCode]
		public int CustomerID
		{
		    get { return _CUSTOMERID; }
		    set { _CUSTOMERID=value; _isModified_=true; }
		}
		
	#endregion
	    
	    #region GetHashCode(),Equals() - uses column _CUSTOMERID to look up objects in liveObjectMap
	    //TODO: move this logic our of user code, into a generated class
	    public override int GetHashCode()
	    {
	        return _CUSTOMERID.GetHashCode();
	    }
	    public override bool Equals(object obj)
	    {
	        Customer o2 = obj as Customer;
	        if(o2==null)
	            return false;
	        return _CUSTOMERID.Equals(o2._CUSTOMERID);
	    }
	    #endregion
	
	    
		[Association(Storage="null", OtherKey="CUSTOMERID", Name="FK_ORDER_CUSTOMER")]
		public EntityMSet<Order> Orders
		{
		    get { return null; } //TODO L212
		}
	    
	}
	
	
	
	[Table(Name="PRODUCTS")]
	public partial class Product : IModified
	{
	    bool _isModified_;
	    public bool IsModified 
	    { 
	        get { return _isModified_; } 
	        set { _isModified_ = value; } 
	    }
	
	    
		protected string _QUANTITYPERUNIT;
	
		protected int _CATEGORYID;
	
		protected int _SUPPLIERID;
	
		protected string _PRODUCTNAME;
	
		protected int _PRODUCTID;
	
	    
		#region costructors
		public Product()
		{
		}
		public Product(string QUANTITYPERUNIT,int CATEGORYID,int SUPPLIERID,string PRODUCTNAME,int PRODUCTID)
		{
		    this._QUANTITYPERUNIT = QUANTITYPERUNIT;
		this._CATEGORYID = CATEGORYID;
		this._SUPPLIERID = SUPPLIERID;
		this._PRODUCTNAME = PRODUCTNAME;
		this._PRODUCTID = PRODUCTID;
		}
		#endregion
		
	
	    #region properties - accessors
	
		[Column(Name="QUANTITYPERUNIT", DBType="VARCHAR2")]
		[DebuggerNonUserCode]
		public string QuantityPerUnit
		{
		    get { return _QUANTITYPERUNIT; }
		    set { _QUANTITYPERUNIT=value; _isModified_=true; }
		}
		
	
		[Column(Name="CATEGORYID", DBType="NUMBER")]
		[DebuggerNonUserCode]
		public int CategoryID
		{
		    get { return _CATEGORYID; }
		    set { _CATEGORYID=value; _isModified_=true; }
		}
		
	
		[Column(Name="SUPPLIERID", DBType="NUMBER")]
		[DebuggerNonUserCode]
		public int SupplierID
		{
		    get { return _SUPPLIERID; }
		    set { _SUPPLIERID=value; _isModified_=true; }
		}
		
	
		[Column(Name="PRODUCTNAME", DBType="VARCHAR2")]
		[DebuggerNonUserCode]
		public string ProductName
		{
		    get { return _PRODUCTNAME; }
		    set { _PRODUCTNAME=value; _isModified_=true; }
		}
		
	
		[Column(Name="PRODUCTID", DBType="NUMBER")]
		[DebuggerNonUserCode]
		public int ProductID
		{
		    get { return _PRODUCTID; }
		    set { _PRODUCTID=value; _isModified_=true; }
		}
		
	#endregion
	    
	    #region GetHashCode(),Equals() - uses column _PRODUCTID to look up objects in liveObjectMap
	    //TODO: move this logic our of user code, into a generated class
	    public override int GetHashCode()
	    {
	        return _PRODUCTID.GetHashCode();
	    }
	    public override bool Equals(object obj)
	    {
	        Product o2 = obj as Product;
	        if(o2==null)
	            return false;
	        return _PRODUCTID.Equals(o2._PRODUCTID);
	    }
	    #endregion
	
	    
		[Association(Storage="null", OtherKey="PRODUCTID", Name="FK_ORDER_PRODUCT")]
		public EntityMSet<Order> Orders
		{
		    get { return null; } //TODO L212
		}
	    
	}
	
	
	
	[Table(Name="ORDERS")]
	public partial class Order : IModified
	{
	    bool _isModified_;
	    public bool IsModified 
	    { 
	        get { return _isModified_; } 
	        set { _isModified_ = value; } 
	    }
	
	    
		protected DateTime _ORDERDATE;
	
		protected int _PRODUCTID;
	
		protected int _CUSTOMERID;
	
		protected int _ORDERID;
	
	    
		#region costructors
		public Order()
		{
		}
		public Order(DateTime ORDERDATE,int PRODUCTID,int CUSTOMERID,int ORDERID)
		{
		    this._ORDERDATE = ORDERDATE;
		this._PRODUCTID = PRODUCTID;
		this._CUSTOMERID = CUSTOMERID;
		this._ORDERID = ORDERID;
		}
		#endregion
		
	
	    #region properties - accessors
	
		[Column(Name="ORDERDATE", DBType="TIMESTAMP")]
		[DebuggerNonUserCode]
		public DateTime OrderDate
		{
		    get { return _ORDERDATE; }
		    set { _ORDERDATE=value; _isModified_=true; }
		}
		
	
		[Column(Name="PRODUCTID", DBType="NUMBER")]
		[DebuggerNonUserCode]
		public int ProductID
		{
		    get { return _PRODUCTID; }
		    set { _PRODUCTID=value; _isModified_=true; }
		}
		
	
		[Column(Name="CUSTOMERID", DBType="NUMBER")]
		[DebuggerNonUserCode]
		public int CustomerID
		{
		    get { return _CUSTOMERID; }
		    set { _CUSTOMERID=value; _isModified_=true; }
		}
		
	
		[Column(Name="ORDERID", DBType="NUMBER")]
		[DebuggerNonUserCode]
		public int OrderID
		{
		    get { return _ORDERID; }
		    set { _ORDERID=value; _isModified_=true; }
		}
		
	#endregion
	    
	    #region GetHashCode(),Equals() - uses column _ORDERID to look up objects in liveObjectMap
	    //TODO: move this logic our of user code, into a generated class
	    public override int GetHashCode()
	    {
	        return _ORDERID.GetHashCode();
	    }
	    public override bool Equals(object obj)
	    {
	        Order o2 = obj as Order;
	        if(o2==null)
	            return false;
	        return _ORDERID.Equals(o2._ORDERID);
	    }
	    #endregion
	
	    
	    
		private EntityRef<Product> _Product;    
		
		[Association(Storage="_Product", ThisKey="PRODUCTID", Name="FK_ORDER_PRODUCT")]
		[DebuggerNonUserCode]
		public Product Product {
			get { return this._Product.Entity; }
			set { this._Product.Entity = value; }
		}
		
		
		private EntityRef<Customer> _Customer;    
		
		[Association(Storage="_Customer", ThisKey="CUSTOMERID", Name="FK_ORDER_CUSTOMER")]
		[DebuggerNonUserCode]
		public Customer Customer {
			get { return this._Customer.Entity; }
			set { this._Customer.Entity = value; }
		}
		
	}
	
}
